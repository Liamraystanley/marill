{
  "name": "Marill",
  "tagline": "Marill -- Automated site testing utility",
  "body": "![Marill -- Automated Site Testing Utility](https://i.imgur.com/HYZ3biA.png)\r\n<p align=\"center\">Marill -- Automated site testing utility.</p>\r\n\r\n[![Build Status](https://travis-ci.org/Liamraystanley/marill.svg?branch=master)](https://travis-ci.org/Liamraystanley/marill)\r\n[![GitHub Issues](https://img.shields.io/github/issues/Liamraystanley/marill.svg)](https://github.com/Liamraystanley/marill/issues)\r\n[![Project Status](https://img.shields.io/badge/status-alpha-red.svg)](https://github.com/Liamraystanley/marill/commits/master)\r\n[![Codebeat Badge](https://codebeat.co/badges/4653f785-83ec-4b21-bf0c-b519b20c89d6)](https://codebeat.co/projects/github-com-liamraystanley-marill)\r\n[![Go Report Card](https://goreportcard.com/badge/github.com/Liamraystanley/marill)](https://goreportcard.com/report/github.com/Liamraystanley/marill)\r\n\r\n## Project Status:\r\nAt this stage, things are still in alpha/likely going to change quite a bit. This includes code, exported functions/tools, cli args, etc.\r\n\r\n   * [See here](https://github.com/Liamraystanley/marill/projects/1) for what is being worked on/in my todo list for the first beta release.\r\n   * [See here](https://github.com/Liamraystanley/marill/projects/2) for what is being worked on/in my todo list for the first major release.\r\n   * Head over to [release.liam.sh/marill](https://release.liam.sh/marill/?sort=time&order=desc) to get some testing bundled binaries, if your'e daring and willing to help test my latest pushes.\r\n\r\n## Building:\r\nMarill supports building on 1.3+ (or even possibly older), however it is recommended to build on the latest go release. Note that you will not be able to use the Makefile to compile Marill if you are trying to build on go 1.4 or lower. You will need to manually compile it, due to limitations with ldflag support.\r\n\r\n```\r\n$ git clone https://github.com/Liamraystanley/marill.git\r\n$ cd marill\r\n$ make\r\n```\r\n\r\nTo run unit tests, then compile, simply run:\r\n\r\n```\r\n$ make test all\r\n```\r\n\r\n## Usage:\r\nThis is very likely to change quite a bit until we're out of beta. Please use wisely.\r\n\r\n```\r\n$ marill --help\r\nNAME:\r\n   marill - Automated website testing utility\r\n\r\nUSAGE:\r\n   marill [global options] command [command options] [arguments...]\r\n   \r\nVERSION:\r\n   git revision XXXXXX\r\n   \r\nAUTHOR(S):\r\n   Liam Stanley <user@domain.com> \r\n   \r\nGLOBAL OPTIONS:\r\n   -d, --debug              Print debugging information to stdout\r\n   -q, --quiet              Do not print regular stdout messages\r\n   --no-color               Do not print with color\r\n   --no-banner              Do not print the colorful banner\r\n   --log-file logfile       Log debugging information to logfile\r\n   --urls                   Print the list of urls as if they were going to be scanned\r\n   --tests                  Print the list of tests that are loaded and would be used\r\n   --tests-extended         Same as --tests, with extra information\r\n   --threads n              Use n threads to fetch data (0 defaults to server cores/2) (default: 0)\r\n   --delay DURATION         Delay DURATION before each resource is crawled (e.g. 5s, 1m, 100ms) (default: 0s)\r\n   --domains DOMAIN:IP ...  Manually specify list of domains to scan in form: DOMAIN:IP ..., or DOMAIN:IP:PORT\r\n   --min-score value        (default: 8)\r\n   -r, --recursive          Check all assets (css/js/images) for each page, recursively\r\n   --ignore-http            Ignore http-based URLs during domain search\r\n   --ignore-https           Ignore https-based URLs during domain search\r\n   --ignore-remote          Ignore all resources that resolve to a remote IP (use with --recursive)\r\n   --domain-ignore GLOB     Ignore URLS during domain search that match GLOB\r\n   --domain-match GLOB      Allow URLS during domain search that match GLOB\r\n   --test-ignore GLOB       Ignore tests that match GLOB, pipe separated list\r\n   --test-match GLOB        Allow tests that match GLOB, pipe separated list\r\n   --tests-url URL          Import tests from a specified URL\r\n   --tests-path PATH        Import tests from a specified file-system PATH\r\n   --ignore-std-tests       Ignores all built-in tests (useful with --tests-url)\r\n   --help, -h               show help\r\n   --version, -v            print the version\r\n   \r\nCOPYRIGHT:\r\n   (c) 2016 Liam Stanley (see https://git.io/vPvUp)\r\n```\r\n\r\n## License:\r\n\r\n    LICENSE: The MIT License (MIT)\r\n    Copyright (c) 2016 Liam Stanley <me@liamstanley.io>\r\n\r\n    Permission is hereby granted, free of charge, to any person obtaining a copy\r\n    of this software and associated documentation files (the \"Software\"), to deal\r\n    in the Software without restriction, including without limitation the rights\r\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n    copies of the Software, and to permit persons to whom the Software is\r\n    furnished to do so, subject to the following conditions:\r\n    \r\n    The above copyright notice and this permission notice shall be included in\r\n    all copies or substantial portions of the Software.\r\n    \r\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n    SOFTWARE.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}